@startuml 

autonumber

actor navegador as nav
boundary "project.routes" as routes
boundary "project.views" as view
control "project.controllers" as controller


activate nav
nav -> routes: GET /projects/add
deactivate nav

activate routes
routes -> controller: get_projects_forms(req, res)
deactivate routes

activate controller
controller -> view: res.render('projects_form.ejs')
deactivate controller

activate view
view -> nav: HTML Form
deactivate view

activate nav
nav -> routes: POST /projects/add
deactivate nav

activate routes
routes -> controller: add_project(req, res)
deactivate routes

activate controller
    create entity generic
controller -> generic: new_generic(req.body.media, \n\treq.body.name, req.body.description, \n\tID)

activate generic
controller ->> generic: save()

database portfolio as db   

generic ->> db: db.execute(`INSERT INTO generics \n\tVALUES (?,?,?,?)`, [this.media, \n\tthis.name, this.description, this.ID])

activate db
db -->> generic: Query OK
deactivate db

generic -->> controller: generic creado
deactivate generic
    create entity project

controller -> project: new_project(req.body.start_date, \n\treq.body.end_date, generic.ID, ID)
activate project
controller ->> project: save()

project ->> db: db.execute(`INSERT INTO projects \n\tVALUES (?,?,?,?)`, [this.start_date, \n\tthis.end_date, this.ID_generic, this.ID])

activate db
db -->> project: Query OK
deactivate db

project -->> controller: proyecto creado
deactivate project

create entity techonology as tec

controller -> tec: new technology(project.ID, req.body.skill, ID)
note left: La creacion de registros en la tabla \ntechnologies irÃ¡ en un ciclo for

activate tec
controller ->> tec: save()

tec ->> db: db.execute(`INSERT INTO technologies \n\tVALUES (?,?,?)`, [this.ID_project, \n\tthis.ID_skill, this.ID])

activate db
db -->> tec: Query OK
deactivate db

tec -->> controller: tecnologias creadas
deactivate tec

controller -->> routes: res.redirect('/home')
deactivate controller
activate routes

@enduml